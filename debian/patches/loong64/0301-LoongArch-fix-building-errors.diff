From 2b80a4b3a2115d56d1611825a9e1708b5e1e7711 Mon Sep 17 00:00:00 2001
From: Peng Fan <fanpeng@loongson.cn>
Date: Mon, 28 Oct 2024 09:02:51 +0000
Subject: [PATCH 301/301] LoongArch: fix building errors.

---
 src/config/mt-loongarch-mlib                  |  2 +-
 .../config/loongarch/loongarch-evolution.h    |  2 +-
 src/gcc/config/loongarch/loongarch-opts.cc    |  1 +
 src/gcc/config/loongarch/loongarch-str.h      | 11 ++-
 src/gcc/config/loongarch/loongarch.cc         |  9 +-
 src/gcc/config/loongarch/loongarch.md         | 44 ++++++---
 src/gcc/config/loongarch/simd.md              | 15 +--
 src/libphobos/libdruntime/Makefile.in         | 94 +++++++++----------
 8 files changed, 99 insertions(+), 79 deletions(-)

diff --git a/src/config/mt-loongarch-mlib b/src/config/mt-loongarch-mlib
index 4cfe568f1..bbbba277f 100644
--- a/src/config/mt-loongarch-mlib
+++ b/src/config/mt-loongarch-mlib
@@ -1 +1 @@
-FLAGS_FOR_TARGET += -fmultiflags
+FLAGS_FOR_TARGET += 
diff --git a/src/gcc/config/loongarch/loongarch-evolution.h b/src/gcc/config/loongarch/loongarch-evolution.h
index d64996481..7e8e602c7 100644
--- a/src/gcc/config/loongarch/loongarch-evolution.h
+++ b/src/gcc/config/loongarch/loongarch-evolution.h
@@ -1,7 +1,7 @@
 /* Generated automatically by "genstr" from "isa-evolution.in".
    Please do not edit this file directly.
 
-   Copyright (C) 2023 Free Software Foundation, Inc.
+   Copyright (C) 2023-2024 Free Software Foundation, Inc.
 
 This file is part of GCC.
 
diff --git a/src/gcc/config/loongarch/loongarch-opts.cc b/src/gcc/config/loongarch/loongarch-opts.cc
index 735daeb7c..1d08bb6a1 100644
--- a/src/gcc/config/loongarch/loongarch-opts.cc
+++ b/src/gcc/config/loongarch/loongarch-opts.cc
@@ -1071,6 +1071,7 @@ loongarch_init_misc_options (struct gcc_options *opts,
 
 #undef INIT_TARGET_FLAG
 
+#define TARGET_DIRECT_EXTERN_ACCESS_OPTS_P(opts) (((opts->x_target_flags) & MASK_DIRECT_EXTERN_ACCESS) != 0)
   /* Set mexplicit-relocs default.  */
   if (opts->x_la_opt_explicit_relocs == M_OPT_UNSET)
     opts->x_la_opt_explicit_relocs = (HAVE_AS_EXPLICIT_RELOCS
diff --git a/src/gcc/config/loongarch/loongarch-str.h b/src/gcc/config/loongarch/loongarch-str.h
index 3cbe12f7b..13d161a8c 100644
--- a/src/gcc/config/loongarch/loongarch-str.h
+++ b/src/gcc/config/loongarch/loongarch-str.h
@@ -66,9 +66,10 @@ along with GCC; see the file COPYING3.  If not see
 #define STR_CMODEL_LARGE "large"
 #define STR_CMODEL_EXTREME "extreme"
 
-#define OPTSTR_FRECIPE "frecipe"
-#define OPTSTR_DIV32   "div32"
-#define OPTSTR_LAM_BH  "lam-bh"
-#define OPTSTR_LAMCAS  "lamcas"
-#define OPTSTR_LD_SEQ_SA   "ld-seq-sa"
+#define OPTSTR_FRECIPE	"frecipe"
+#define OPTSTR_DIV32	"div32"
+#define OPTSTR_LAM_BH	"lam-bh"
+#define OPTSTR_LAMCAS	"lamcas"
+#define OPTSTR_LD_SEQ_SA	"ld-seq-sa"
+
 #endif /* LOONGARCH_STR_H */
diff --git a/src/gcc/config/loongarch/loongarch.cc b/src/gcc/config/loongarch/loongarch.cc
index 2baf2ef59..5b36d3773 100644
--- a/src/gcc/config/loongarch/loongarch.cc
+++ b/src/gcc/config/loongarch/loongarch.cc
@@ -764,14 +764,7 @@ loongarch_setup_incoming_varargs (cumulative_args_t cum,
      argument.  Advance a local copy of CUM past the last "real" named
      argument, to find out how many registers are left over.  */
   local_cum = *get_cumulative_args (cum);
-
-  /* For a C23 variadic function w/o any named argument, and w/o an
-     artifical argument for large return value, skip advancing args.
-     There is such an artifical argument iff. arg.type is non-NULL
-     (PR 114175).  */
-  if (!TYPE_NO_NAMED_ARGS_STDARG_P (TREE_TYPE (current_function_decl))
-      || arg.type != NULL_TREE)
-    loongarch_function_arg_advance (pack_cumulative_args (&local_cum), arg);
+  loongarch_function_arg_advance (pack_cumulative_args (&local_cum), arg);
 
   /* Found out how many registers we need to save.  */
   gp_saved = MAX_ARGS_IN_REGISTERS - local_cum.num_gprs;
diff --git a/src/gcc/config/loongarch/loongarch.md b/src/gcc/config/loongarch/loongarch.md
index 66236a7c7..d8d444c7a 100644
--- a/src/gcc/config/loongarch/loongarch.md
+++ b/src/gcc/config/loongarch/loongarch.md
@@ -32,6 +32,7 @@
   UNSPEC_FCLASS
   UNSPEC_FMAX
   UNSPEC_FMIN
+  UNSPEC_COPYSIGN
   UNSPEC_FTINT
   UNSPEC_FTINTRM
   UNSPEC_FTINTRP
@@ -415,11 +416,13 @@
 
 ;; A mode for anything with 32 bits or more, and able to be loaded with
 ;; the same addressing mode as ld.w.
-(define_mode_iterator LD_AT_LEAST_32_BIT [GPR ANYF])
+;; (define_mode_iterator LD_AT_LEAST_32_BIT [GPR ANYF])
+(define_mode_iterator LD_AT_LEAST_32_BIT [(SI "") (DI "TARGET_64BIT") (SF "TARGET_HARD_FLOAT") (DF "TARGET_DOUBLE_FLOAT")])
 
 ;; A mode for anything able to be stored with the same addressing mode as
 ;; st.w.
-(define_mode_iterator ST_ANY [QHWD ANYF])
+;; (define_mode_iterator ST_ANY [QHWD ANYF])
+(define_mode_iterator ST_ANY [(QI "") (HI "") (SI "") (DI "TARGET_64BIT") (SF "TARGET_HARD_FLOAT") (DF "TARGET_DOUBLE_FLOAT")])
 
 ;; A mode for anything legal as a input of a div or mod instruction.
 (define_mode_iterator DIV [(DI "TARGET_64BIT")
@@ -590,6 +593,10 @@
 (define_code_attr sel [(eq "masknez") (ne "maskeqz")])
 (define_code_attr selinv [(eq "maskeqz") (ne "masknez")])
 
+(define_int_attr lrint_allow_inexact [(UNSPEC_FTINT "1")
+                     (UNSPEC_FTINTRM "0")
+                     (UNSPEC_FTINTRP "0")])
+
 ;; Iterator and attributes for floating-point to fixed-point conversion
 ;; instructions.
 (define_int_iterator LRINT [UNSPEC_FTINT UNSPEC_FTINTRM UNSPEC_FTINTRP])
@@ -625,7 +632,8 @@
 ;; so the redundant sign extension can be removed if the output is used as
 ;; an input of a bitwise operation.  Note plus, rotl, and div are handled
 ;; separately.
-(define_code_iterator shift_w [any_shift rotatert])
+;; (define_code_iterator shift_w [any_shift rotatert])
+(define_code_iterator shift_w [ashift ashiftrt lshiftrt rotatert])
 (define_code_iterator arith_w [minus mult])
 
 (define_expand "<optab><mode>3"
@@ -1324,8 +1332,9 @@
 
 (define_insn "copysign<mode>3"
   [(set (match_operand:ANYF 0 "register_operand" "=f")
-	(copysign:ANYF (match_operand:ANYF 1 "register_operand" "f")
-		       (match_operand:ANYF 2 "register_operand" "f")))]
+	(unspec:ANYF [(match_operand:ANYF 1 "register_operand" "f")
+		       (match_operand:ANYF 2 "register_operand" "f")]
+               UNSPEC_COPYSIGN))]
   "TARGET_HARD_FLOAT"
   "fcopysign.<fmt>\t%0,%1,%2"
   [(set_attr "type" "fcopysign")
@@ -2722,12 +2731,13 @@
    (set_attr "mode" "<MODE>")])
 
 ;; Convert floating-point numbers to integers
+;;   (<LRINT> == UNSPEC_FTINT
 (define_insn "<lrint_pattern><ANYF:mode><ANYFI:mode>2"
   [(set (match_operand:ANYFI 0 "register_operand" "=f")
 	(unspec:ANYFI [(match_operand:ANYF 1 "register_operand" "f")]
 		      LRINT))]
   "TARGET_HARD_FLOAT &&
-   (<LRINT> == UNSPEC_FTINT
+   (<lrint_allow_inexact>
     || flag_fp_int_builtin_inexact
     || !flag_trapping_math)"
   "ftint<lrint_submenmonic>.<ANYFI:ifmt>.<ANYF:fmt> %0,%1"
@@ -4135,15 +4145,26 @@
    (136	"isnormal")
    (952	"isfinite")])
 
-(define_expand "<FCLASS_MASK:fclass_optab><ANYF:mode>2"
+;;(define_expand "<FCLASS_MASK:fclass_optab><ANYF:mode>2"
+;;  [(match_operand:SI   0 "register_operand" "=r")
+;;   (match_operand:ANYF 1 "register_operand" " f")
+;;   (const_int FCLASS_MASK)]
+;;  "TARGET_HARD_FLOAT"
+;;  {
+;;    rtx ft0 = gen_reg_rtx (SImode);
+;;    rtx t0 = gen_reg_rtx (word_mode);
+;;    rtx mask = GEN_INT (<FCLASS_MASK>);
+
+(define_expand "fclass_optab<ANYF:mode>2"
+ [(unspec:ANYF
   [(match_operand:SI   0 "register_operand" "=r")
-   (match_operand:ANYF 1 "register_operand" " f")
-   (const_int FCLASS_MASK)]
+   (match_operand:ANYF 1 "register_operand" " f")]
+   UNSPEC_FCLASS)]
   "TARGET_HARD_FLOAT"
   {
     rtx ft0 = gen_reg_rtx (SImode);
     rtx t0 = gen_reg_rtx (word_mode);
-    rtx mask = GEN_INT (<FCLASS_MASK>);
+    rtx mask = GEN_INT (GET_MODE_MASK (<MODE>mode));
 
     emit_insn (gen_fclass_<ANYF:fmt> (ft0, operands[1]));
 
@@ -4165,7 +4186,8 @@
     emit_move_insn (operands[0], t0);
 
     DONE;
-  })
+  }
+  [(set_attr "mode" "<ANYF:MODE>")])
 
 (define_insn "bytepick_w_<bytepick_imm>"
   [(set (match_operand:SI 0 "register_operand" "=r")
diff --git a/src/gcc/config/loongarch/simd.md b/src/gcc/config/loongarch/simd.md
index c28b95282..9e4c08196 100644
--- a/src/gcc/config/loongarch/simd.md
+++ b/src/gcc/config/loongarch/simd.md
@@ -30,10 +30,13 @@
 (define_mode_iterator FLASX   [V4DF V8SF])
 
 ;; All integer modes available
-(define_mode_iterator IVEC    [(ILSX "ISA_HAS_LSX") (ILASX "ISA_HAS_LASX")])
+;; (define_mode_iterator IVEC    [(ILSX "ISA_HAS_LSX") (ILASX "ISA_HAS_LASX")])
+(define_mode_iterator IVEC    [(V2DI "ISA_HAS_LSX") (V4SI "ISA_HAS_LSX") (V8HI "ISA_HAS_LSX") (V16QI "ISA_HAS_LSX")
+                            (V4DI "ISA_HAS_LASX") (V8SI "ISA_HAS_LASX") (V16HI "ISA_HAS_LASX") (V32QI "ISA_HAS_LASX")])
 
 ;; All FP modes available
-(define_mode_iterator FVEC    [(FLSX "ISA_HAS_LSX") (FLASX "ISA_HAS_LASX")])
+(define_mode_iterator FVEC    [(V2DF "ISA_HAS_LSX") (V4SF "ISA_HAS_LSX") 
+                            (V4DF "ISA_HAS_LASX") (V8SF "ISA_HAS_LASX")])
 
 ;; Mnemonic prefix, "x" for LASX modes.
 (define_mode_attr x [(V2DI "") (V4SI "") (V8HI "") (V16QI "")
@@ -162,12 +165,12 @@
 ;; Expand the standard-named patterns to <x>vfrint instructions if
 ;; raising inexact exception is allowed.
 
+;;   "<SIMD_FRINT> == UNSPEC_SIMD_FRINT ||
 (define_expand "<simd_frint_pattern><mode>2"
   [(set (match_operand:FVEC 0 "register_operand" "=f")
 	(unspec:FVEC [(match_operand:FVEC 1 "register_operand" "f")]
 		     SIMD_FRINT))]
-   "<SIMD_FRINT> == UNSPEC_SIMD_FRINT ||
-    flag_fp_int_builtin_inexact ||
+    "flag_fp_int_builtin_inexact ||
     !flag_trapping_math")
 
 ;; ftrunc is like btrunc, but it's allowed to raise inexact exception
@@ -221,13 +224,13 @@
 ;; Expand the standard-named patterns to <x>vftint instructions if
 ;; raising inexact exception.
 
+;;   "<SIMD_FRINT> == UNSPEC_SIMD_FRINT ||
 (define_expand "l<simd_frint_pattern><mode><vimode>2"
   [(set (match_operand:<VIMODE> 0 "register_operand" "=f")
 	(fix:<VIMODE>
 	  (unspec:FVEC [(match_operand:FVEC 1 "register_operand" "f")]
 		       SIMD_FRINT)))]
-   "<SIMD_FRINT> == UNSPEC_SIMD_FRINT ||
-    flag_fp_int_builtin_inexact ||
+    "flag_fp_int_builtin_inexact ||
     !flag_trapping_math")
 
 ;; fix_trunc is allowed to raise inexact exception even if
diff --git a/src/libphobos/libdruntime/Makefile.in b/src/libphobos/libdruntime/Makefile.in
index 91cd65362..b686f5eb4 100644
--- a/src/libphobos/libdruntime/Makefile.in
+++ b/src/libphobos/libdruntime/Makefile.in
@@ -124,13 +124,13 @@ target_triplet = @target@
 # CPU specific sources
 @DRUNTIME_CPU_AARCH64_TRUE@am__append_11 = config/aarch64/switchcontext.S
 @DRUNTIME_CPU_ARM_TRUE@am__append_12 = config/arm/switchcontext.S
-@DRUNTIME_CPU_LOONGARCH_TRUE@am__append_13 = config/loongarch/switchcontext.S
-@DRUNTIME_CPU_MIPS_TRUE@am__append_14 = config/mips/switchcontext.S
-@DRUNTIME_CPU_POWERPC_TRUE@am__append_15 = config/powerpc/switchcontext.S
-@DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_TRUE@am__append_16 = config/mingw/switchcontext.S
-@DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_FALSE@am__append_17 = config/x86/switchcontext.S
-@DRUNTIME_CPU_SYSTEMZ_TRUE@am__append_18 = config/systemz/get_tls_offset.S
-@DRUNTIME_CPU_S390_TRUE@am__append_19 = config/s390/get_tls_offset.S
+@DRUNTIME_CPU_MIPS_TRUE@am__append_13 = config/mips/switchcontext.S
+@DRUNTIME_CPU_POWERPC_TRUE@am__append_14 = config/powerpc/switchcontext.S
+@DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_TRUE@am__append_15 = config/mingw/switchcontext.S
+@DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_FALSE@am__append_16 = config/x86/switchcontext.S
+@DRUNTIME_CPU_SYSTEMZ_TRUE@am__append_17 = config/systemz/get_tls_offset.S
+@DRUNTIME_CPU_S390_TRUE@am__append_18 = config/s390/get_tls_offset.S
+@DRUNTIME_CPU_LOONGARCH_TRUE@am__append_19 = config/loongarch/switchcontext.S
 subdir = libdruntime
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
 am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \
@@ -475,14 +475,14 @@ am__objects_22 = core/sys/solaris/dlfcn.lo core/sys/solaris/elf.lo \
 @DRUNTIME_OS_SOLARIS_TRUE@am__objects_23 = $(am__objects_22)
 @DRUNTIME_CPU_AARCH64_TRUE@am__objects_24 = config/aarch64/libgdruntime_la-switchcontext.lo
 @DRUNTIME_CPU_ARM_TRUE@am__objects_25 = config/arm/libgdruntime_la-switchcontext.lo
-@DRUNTIME_CPU_LOONGARCH_TRUE@am__objects_26 = config/loongarch/libgdruntime_la-switchcontext.lo
-@DRUNTIME_CPU_MIPS_TRUE@am__objects_27 = config/mips/libgdruntime_la-switchcontext.lo
-@DRUNTIME_CPU_POWERPC_TRUE@am__objects_28 = config/powerpc/libgdruntime_la-switchcontext.lo
-@DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_TRUE@am__objects_29 = config/mingw/libgdruntime_la-switchcontext.lo
-@DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_FALSE@am__objects_30 = config/x86/libgdruntime_la-switchcontext.lo
-@DRUNTIME_CPU_SYSTEMZ_TRUE@am__objects_31 = config/systemz/libgdruntime_la-get_tls_offset.lo
-@DRUNTIME_CPU_S390_TRUE@am__objects_32 = config/s390/libgdruntime_la-get_tls_offset.lo
-am__objects_33 = $(am__objects_6) $(am__objects_8) $(am__objects_10) \
+@DRUNTIME_CPU_MIPS_TRUE@am__objects_26 = config/mips/libgdruntime_la-switchcontext.lo
+@DRUNTIME_CPU_POWERPC_TRUE@am__objects_27 = config/powerpc/libgdruntime_la-switchcontext.lo
+@DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_TRUE@am__objects_28 = config/mingw/libgdruntime_la-switchcontext.lo
+@DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_FALSE@am__objects_29 = config/x86/libgdruntime_la-switchcontext.lo
+@DRUNTIME_CPU_SYSTEMZ_TRUE@am__objects_30 = config/systemz/libgdruntime_la-get_tls_offset.lo
+@DRUNTIME_CPU_S390_TRUE@am__objects_31 = config/s390/libgdruntime_la-get_tls_offset.lo
+@DRUNTIME_CPU_LOONGARCH_TRUE@am__objects_32 = config/loongarch/libgdruntime_la-switchcontext.lo
+am__objects_33 = $(am__objects_5) $(am__objects_7) $(am__objects_9) \
 	$(am__objects_11) $(am__objects_13) $(am__objects_15) \
 	$(am__objects_17) $(am__objects_19) $(am__objects_21) \
 	$(am__objects_23) $(am__objects_24) $(am__objects_25) \
@@ -500,22 +500,22 @@ am__objects_36 = core/stdc/libgdruntime_convenience_la-errno_.lo
 @DRUNTIME_OS_MINGW_TRUE@	config/mingw/libgdruntime_convenience_la-msvc.lo
 @DRUNTIME_CPU_AARCH64_TRUE@am__objects_38 = config/aarch64/libgdruntime_convenience_la-switchcontext.lo
 @DRUNTIME_CPU_ARM_TRUE@am__objects_39 = config/arm/libgdruntime_convenience_la-switchcontext.lo
-@DRUNTIME_CPU_LOONGARCH_TRUE@am__objects_40 = config/loongarch/libgdruntime_convenience_la-switchcontext.lo
-@DRUNTIME_CPU_MIPS_TRUE@am__objects_41 = config/mips/libgdruntime_convenience_la-switchcontext.lo
-@DRUNTIME_CPU_POWERPC_TRUE@am__objects_42 = config/powerpc/libgdruntime_convenience_la-switchcontext.lo
-@DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_TRUE@am__objects_43 = config/mingw/libgdruntime_convenience_la-switchcontext.lo
-@DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_FALSE@am__objects_44 = config/x86/libgdruntime_convenience_la-switchcontext.lo
-@DRUNTIME_CPU_SYSTEMZ_TRUE@am__objects_45 = config/systemz/libgdruntime_convenience_la-get_tls_offset.lo
-@DRUNTIME_CPU_S390_TRUE@am__objects_46 = config/s390/libgdruntime_convenience_la-get_tls_offset.lo
+@DRUNTIME_CPU_MIPS_TRUE@am__objects_40 = config/mips/libgdruntime_convenience_la-switchcontext.lo
+@DRUNTIME_CPU_POWERPC_TRUE@am__objects_41 = config/powerpc/libgdruntime_convenience_la-switchcontext.lo
+@DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_TRUE@am__objects_42 = config/mingw/libgdruntime_convenience_la-switchcontext.lo
+@DRUNTIME_CPU_X86_TRUE@@DRUNTIME_OS_MINGW_FALSE@am__objects_43 = config/x86/libgdruntime_convenience_la-switchcontext.lo
+@DRUNTIME_CPU_SYSTEMZ_TRUE@am__objects_44 = config/systemz/libgdruntime_convenience_la-get_tls_offset.lo
+@DRUNTIME_CPU_S390_TRUE@am__objects_45 = config/s390/libgdruntime_convenience_la-get_tls_offset.lo
+@DRUNTIME_CPU_LOONGARCH_TRUE@am__objects_46 = config/loongarch/libgdruntime_convenience_la-switchcontext.lo
 am__objects_47 = $(am__objects_5) $(am__objects_7) $(am__objects_9) \
 	$(am__objects_11) $(am__objects_13) $(am__objects_15) \
-	$(am__objects_17) $(am__objects_19) $(am__objects_36) \
-	$(am__objects_23) $(am__objects_37) $(am__objects_38) \
-	$(am__objects_39) $(am__objects_40) $(am__objects_41) \
-	$(am__objects_42) $(am__objects_43) $(am__objects_44) \
-	$(am__objects_45) $(am__objects_46)
-am__objects_48 = $(am__objects_1) $(am__objects_35) $(am__objects_3) \
-	$(am__objects_47) $(am__objects_33)
+	$(am__objects_17) $(am__objects_19) $(am__objects_37) \
+	$(am__objects_23) $(am__objects_38) $(am__objects_39) \
+	$(am__objects_40) $(am__objects_41) $(am__objects_42) \
+	$(am__objects_43) $(am__objects_44) $(am__objects_45) \
+	$(am__objects_46)
+am__objects_48 = $(am__objects_1) $(am__objects_36) $(am__objects_3) \
+	$(am__objects_47) $(am__objects_34)
 am__objects_49 = $(am__objects_48)
 am_libgdruntime_convenience_la_OBJECTS = $(am__objects_49)
 libgdruntime_convenience_la_OBJECTS =  \
@@ -1905,11 +1905,6 @@ config/arm/$(am__dirstamp):
 	@: > config/arm/$(am__dirstamp)
 config/arm/libgdruntime_la-switchcontext.lo:  \
 	config/arm/$(am__dirstamp)
-config/loongarch/$(am__dirstamp):
-	@$(MKDIR_P) config/loongarch
-	@: > config/loongarch/$(am__dirstamp)
-config/loongarch/libgdruntime_la-switchcontext.lo:  \
-	config/loongarch/$(am__dirstamp)
 config/mips/$(am__dirstamp):
 	@$(MKDIR_P) config/mips
 	@: > config/mips/$(am__dirstamp)
@@ -1937,6 +1932,11 @@ config/s390/$(am__dirstamp):
 	@: > config/s390/$(am__dirstamp)
 config/s390/libgdruntime_la-get_tls_offset.lo:  \
 	config/s390/$(am__dirstamp)
+config/loongarch/$(am__dirstamp):
+	@$(MKDIR_P) config/loongarch
+	@: > config/loongarch/$(am__dirstamp)
+config/loongarch/libgdruntime_la-switchcontext.lo:  \
+	config/loongarch/$(am__dirstamp)
 gcc/config.lo: gcc/$(am__dirstamp)
 gcc/libbacktrace.lo: gcc/$(am__dirstamp)
 
@@ -1950,8 +1950,6 @@ config/aarch64/libgdruntime_convenience_la-switchcontext.lo:  \
 	config/aarch64/$(am__dirstamp)
 config/arm/libgdruntime_convenience_la-switchcontext.lo:  \
 	config/arm/$(am__dirstamp)
-config/loongarch/libgdruntime_convenience_la-switchcontext.lo:  \
- config/loongarch/$(am__dirstamp)
 config/mips/libgdruntime_convenience_la-switchcontext.lo:  \
 	config/mips/$(am__dirstamp)
 config/powerpc/libgdruntime_convenience_la-switchcontext.lo:  \
@@ -1964,6 +1962,8 @@ config/systemz/libgdruntime_convenience_la-get_tls_offset.lo:  \
 	config/systemz/$(am__dirstamp)
 config/s390/libgdruntime_convenience_la-get_tls_offset.lo:  \
 	config/s390/$(am__dirstamp)
+config/loongarch/libgdruntime_convenience_la-switchcontext.lo:  \
+	config/loongarch/$(am__dirstamp)
 
 libgdruntime_convenience.la: $(libgdruntime_convenience_la_OBJECTS) $(libgdruntime_convenience_la_DEPENDENCIES) $(EXTRA_libgdruntime_convenience_la_DEPENDENCIES) 
 	$(AM_V_GEN)$(libgdruntime_convenience_la_LINK)  $(libgdruntime_convenience_la_OBJECTS) $(libgdruntime_convenience_la_LIBADD) $(LIBS)
@@ -1976,14 +1976,14 @@ mostlyclean-compile:
 	-rm -f config/arm/*.lo
 	-rm -f config/mingw/*.$(OBJEXT)
 	-rm -f config/mingw/*.lo
-	-rm -f config/loongarch/*.$(OBJEXT)
-	-rm -f config/loongarch/*.lo
 	-rm -f config/mips/*.$(OBJEXT)
 	-rm -f config/mips/*.lo
 	-rm -f config/powerpc/*.$(OBJEXT)
 	-rm -f config/powerpc/*.lo
 	-rm -f config/s390/*.$(OBJEXT)
 	-rm -f config/s390/*.lo
+	-rm -f config/loongarch/*.$(OBJEXT)
+	-rm -f config/loongarch/*.lo
 	-rm -f config/systemz/*.$(OBJEXT)
 	-rm -f config/systemz/*.lo
 	-rm -f config/x86/*.$(OBJEXT)
@@ -2101,10 +2101,7 @@ config/aarch64/libgdruntime_la-switchcontext.lo: config/aarch64/switchcontext.S
 config/arm/libgdruntime_la-switchcontext.lo: config/arm/switchcontext.S
 	$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/arm/libgdruntime_la-switchcontext.lo `test -f 'config/arm/switchcontext.S' || echo '$(srcdir)/'`config/arm/switchcontext.S
 
-config/loongarch/libgdruntime_la-switchcontext.lo: config/loongarch/switchcontext.S
- $(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS)
-
-onfig/mips/libgdruntime_la-switchcontext.lo: config/mips/switchcontext.S
+config/mips/libgdruntime_la-switchcontext.lo: config/mips/switchcontext.S
 	$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/mips/libgdruntime_la-switchcontext.lo `test -f 'config/mips/switchcontext.S' || echo '$(srcdir)/'`config/mips/switchcontext.S
 
 config/powerpc/libgdruntime_la-switchcontext.lo: config/powerpc/switchcontext.S
@@ -2122,18 +2119,21 @@ config/systemz/libgdruntime_la-get_tls_offset.lo: config/systemz/get_tls_offset.
 config/s390/libgdruntime_la-get_tls_offset.lo: config/s390/get_tls_offset.S
 	$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/s390/libgdruntime_la-get_tls_offset.lo `test -f 'config/s390/get_tls_offset.S' || echo '$(srcdir)/'`config/s390/get_tls_offset.S
 
+config/loongarch/libgdruntime_la-switchcontext.lo: config/loongarch/switchcontext.S
+	$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/loongarch/libgdruntime_la-switchcontext.lo `test -f 'config/loongarch/switchcontext.S' || echo '$(srcdir)/'`config/loongarch/switchcontext.S
+
 config/aarch64/libgdruntime_convenience_la-switchcontext.lo: config/aarch64/switchcontext.S
 	$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_convenience_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/aarch64/libgdruntime_convenience_la-switchcontext.lo `test -f 'config/aarch64/switchcontext.S' || echo '$(srcdir)/'`config/aarch64/switchcontext.S
 
 config/arm/libgdruntime_convenience_la-switchcontext.lo: config/arm/switchcontext.S
 	$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_convenience_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/arm/libgdruntime_convenience_la-switchcontext.lo `test -f 'config/arm/switchcontext.S' || echo '$(srcdir)/'`config/arm/switchcontext.S
 
-config/loongarch/libgdruntime_convenience_la-switchcontext.lo: config/loongarch/switchcontext.S
- $(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_convenience_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM
-
 config/mips/libgdruntime_convenience_la-switchcontext.lo: config/mips/switchcontext.S
 	$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_convenience_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/mips/libgdruntime_convenience_la-switchcontext.lo `test -f 'config/mips/switchcontext.S' || echo '$(srcdir)/'`config/mips/switchcontext.S
 
+config/loongarch/libgdruntime_convenience_la-switchcontext.lo: config/loongarch/switchcontext.S
+	$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_convenience_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/loongarch/libgdruntime_convenience_la-switchcontext.lo `test -f 'config/loongarch/switchcontext.S' || echo '$(srcdir)/'`config/loongarch/switchcontext.S
+
 config/powerpc/libgdruntime_convenience_la-switchcontext.lo: config/powerpc/switchcontext.S
 	$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(libgdruntime_convenience_la_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o config/powerpc/libgdruntime_convenience_la-switchcontext.lo `test -f 'config/powerpc/switchcontext.S' || echo '$(srcdir)/'`config/powerpc/switchcontext.S
 
@@ -2178,10 +2178,10 @@ clean-libtool:
 	-rm -rf config/aarch64/.libs config/aarch64/_libs
 	-rm -rf config/arm/.libs config/arm/_libs
 	-rm -rf config/mingw/.libs config/mingw/_libs
-	-rm -rf config/loongarch/.libs config/loongarch/_libs
 	-rm -rf config/mips/.libs config/mips/_libs
 	-rm -rf config/powerpc/.libs config/powerpc/_libs
 	-rm -rf config/s390/.libs config/s390/_libs
+	-rm -rf config/loongarch/.libs config/loongarch/_libs
 	-rm -rf config/systemz/.libs config/systemz/_libs
 	-rm -rf config/x86/.libs config/x86/_libs
 	-rm -rf core/.libs core/_libs
@@ -2340,10 +2340,10 @@ distclean-generic:
 	-rm -f config/aarch64/$(am__dirstamp)
 	-rm -f config/arm/$(am__dirstamp)
 	-rm -f config/mingw/$(am__dirstamp)
-	-rm -f config/loongarch/$(am__dirstamp)
 	-rm -f config/mips/$(am__dirstamp)
 	-rm -f config/powerpc/$(am__dirstamp)
 	-rm -f config/s390/$(am__dirstamp)
+	-rm -f config/loongarch/$(am__dirstamp)
 	-rm -f config/systemz/$(am__dirstamp)
 	-rm -f config/x86/$(am__dirstamp)
 	-rm -f core/$(am__dirstamp)
-- 
2.45.2

