From 7f63428198b5a3d0e8c0c30ddfba68a638de9779 Mon Sep 17 00:00:00 2001
From: Jiahao Xu <xujiahao@loongson.cn>
Date: Wed, 24 Jan 2024 17:19:32 +0800
Subject: [PATCH 243/301] LoongArch: Fix incorrect return type for
 frecipe/frsqrte intrinsic functions

gcc/ChangeLog:

	* config/loongarch/larchintrin.h
	(__frecipe_s): Update function return type.
	(__frecipe_d): Ditto.
	(__frsqrte_s): Ditto.
	(__frsqrte_d): Ditto.

gcc/testsuite/ChangeLog:

	* gcc.target/loongarch/larch-frecipe-intrinsic.c: New test.
---
 src/gcc/config/loongarch/larchintrin.h        | 16 +++++-----
 .../loongarch/larch-frecipe-intrinsic.c       | 30 +++++++++++++++++++
 2 files changed, 38 insertions(+), 8 deletions(-)
 create mode 100644 src/gcc/testsuite/gcc.target/loongarch/larch-frecipe-intrinsic.c

diff --git a/src/gcc/config/loongarch/larchintrin.h b/src/gcc/config/loongarch/larchintrin.h
index 22035e767..6582dfe49 100644
--- a/src/gcc/config/loongarch/larchintrin.h
+++ b/src/gcc/config/loongarch/larchintrin.h
@@ -336,38 +336,38 @@ __iocsrwr_d (unsigned long int _1, unsigned int _2)
 #ifdef __loongarch_frecipe
 /* Assembly instruction format: fd, fj.  */
 /* Data types in instruction templates:  SF, SF.  */
-extern __inline void
+extern __inline float
 __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))
 __frecipe_s (float _1)
 {
-  __builtin_loongarch_frecipe_s ((float) _1);
+  return (float) __builtin_loongarch_frecipe_s ((float) _1);
 }
 
 /* Assembly instruction format: fd, fj.  */
 /* Data types in instruction templates:  DF, DF.  */
-extern __inline void
+extern __inline double
 __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))
 __frecipe_d (double _1)
 {
-  __builtin_loongarch_frecipe_d ((double) _1);
+  return (double) __builtin_loongarch_frecipe_d ((double) _1);
 }
 
 /* Assembly instruction format: fd, fj.  */
 /* Data types in instruction templates:  SF, SF.  */
-extern __inline void
+extern __inline float
 __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))
 __frsqrte_s (float _1)
 {
-  __builtin_loongarch_frsqrte_s ((float) _1);
+  return (float) __builtin_loongarch_frsqrte_s ((float) _1);
 }
 
 /* Assembly instruction format: fd, fj.  */
 /* Data types in instruction templates:  DF, DF.  */
-extern __inline void
+extern __inline double
 __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))
 __frsqrte_d (double _1)
 {
-  __builtin_loongarch_frsqrte_d ((double) _1);
+  return (double) __builtin_loongarch_frsqrte_d ((double) _1);
 }
 #endif
 
diff --git a/src/gcc/testsuite/gcc.target/loongarch/larch-frecipe-intrinsic.c b/src/gcc/testsuite/gcc.target/loongarch/larch-frecipe-intrinsic.c
new file mode 100644
index 000000000..6ce2bde0a
--- /dev/null
+++ b/src/gcc/testsuite/gcc.target/loongarch/larch-frecipe-intrinsic.c
@@ -0,0 +1,30 @@
+/* Test intrinsics for frecipe.{s/d} and frsqrte.{s/d} instructions */
+/* { dg-do compile } */
+/* { dg-options "-mfrecipe -O2" } */
+/* { dg-final { scan-assembler-times "test_frecipe_s:.*frecipe\\.s.*test_frecipe_s" 1 } } */
+/* { dg-final { scan-assembler-times "test_frecipe_d:.*frecipe\\.d.*test_frecipe_d" 1 } } */
+/* { dg-final { scan-assembler-times "test_frsqrte_s:.*frsqrte\\.s.*test_frsqrte_s" 1 } } */
+/* { dg-final { scan-assembler-times "test_frsqrte_d:.*frsqrte\\.d.*test_frsqrte_d" 1 } } */
+
+#include <larchintrin.h>
+
+float
+test_frecipe_s (float _1)
+{
+  return __frecipe_s (_1);
+}
+double
+test_frecipe_d (double _1)
+{
+  return __frecipe_d (_1);
+}
+float
+test_frsqrte_s (float _1)
+{
+  return __frsqrte_s (_1);
+}
+double
+test_frsqrte_d (double _1)
+{
+  return __frsqrte_d (_1);
+}
-- 
2.45.2

